T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
T__6=7
T__7=8
ADDR=9
VARIABLE=10
AND=11
AS=12
ASM=13
BIND=14
BLOCK=15
BREAK=16
CASE=17
CAST=18
CONCEPT=19
CONST=20
CONTINUE=21
CONVERTER=22
MACRO=23
METHOD=24
MIXIN=25
MOD=26
NIL=27
NOT=28
NOTIN=29
OBJECT=30
OF=31
OR=32
OUT=33
PROC=34
PTR=35
RAISE=36
REF=37
RETURN=38
SHL=39
SHR=40
STATIC=41
TEMPLATE=42
TRY=43
TUPLE=44
TYPE=45
USING=46
WHEN=47
WHILE=48
XOR=49
YIELD=50
DEFER=51
DISCARD=52
DISTINCT=53
DIV=54
DO=55
ELIF=56
ELSE=57
END=58
ENUM=59
EXCEPT=60
EXPORT=61
FINALLY=62
FOR=63
FROM=64
FUNC=65
IF=66
IMPORT=67
IN=68
INCLUDE=69
INTERFACE=70
IS=71
ISNOT=72
ITERATOR=73
LET=74
EQUALS_OPERATOR=75
ADD_OPERATOR=76
MINUS_OPERATOR=77
MUL_OPERATOR=78
DIV_OPERATOR=79
LESS_THAN=80
GREATER_THAN=81
AND_OPERATOR=82
OR_OPERATOR=83
BITWISE_NOT_OPERATOR=84
AT=85
MODULUS=86
NOT_OPERATOR=87
XOR_OPERATOR=88
DOT=89
COLON=90
OPEN_BRACE=91
CLOSE_BRACE=92
OPEN_PAREN=93
CLOSE_PAREN=94
OPEN_BRACK=95
CLOSE_BRACK=96
COMMA=97
SEMI_COLON=98
COMMENT=99
MULTILINE=100
MULTILINE_DOC=101
STR_LIT=102
TRIPLESTR_LIT=103
RSTR_LIT=104
CHAR_LIT=105
GENERALIZED_STR_LIT=106
GENERALIZED_TRIPLESTR_LIT=107
IDENTIFIER=108
FLOAT_LIT=109
DIGIT=110
INT_LIT=111
INT8_LIT=112
INT16_LIT=113
INT32_LIT=114
INT64_LIT=115
UINT_LIT=116
UINT8_LIT=117
UINT16_LIT=118
UINT32_LIT=119
UINT64_LIT=120
HEX_LIT=121
DEC_LIT=122
OCT_LIT=123
BIN_LIT=124
HEX=125
HEXDIGIT=126
OCTDIGIT=127
BINDIGIT=128
EXP=129
FLOAT32_SUFFIX=130
FLOAT32_LIT=131
FLOAT64_SUFFIX=132
FLOAT64_LIT=133
LETTER=134
ALL_ESCAPES=135
OP10=136
OP9=137
OP8=138
OP7=139
OP6=140
OP5=141
OP4=142
OP3=143
OP2=144
OP1=145
OP0=146
SPACE=147
INDENT=148
DEDENT=149
KEYW=150
IDENT=151
'..'=1
'`'=2
'='=3
'[:'=4
'{.'=5
'.}'=6
'->'=7
'shared'=8
'addr'=9
'var'=10
'and'=11
'as'=12
'asm'=13
'bind'=14
'block'=15
'break'=16
'case'=17
'cast'=18
'concept'=19
'const'=20
'continue'=21
'converter'=22
'macro'=23
'method'=24
'mixin'=25
'mod'=26
'nil'=27
'not'=28
'notin'=29
'object'=30
'of'=31
'or'=32
'out'=33
'proc'=34
'ptr'=35
'raise'=36
'ref'=37
'return'=38
'shl'=39
'shr'=40
'static'=41
'template'=42
'try'=43
'tuple'=44
'type'=45
'using'=46
'when'=47
'while'=48
'xor'=49
'yield'=50
'defer'=51
'discard'=52
'distinct'=53
'div'=54
'do'=55
'elif'=56
'else'=57
'end'=58
'enum'=59
'except'=60
'export'=61
'finally'=62
'for'=63
'from'=64
'func'=65
'if'=66
'import'=67
'in'=68
'include'=69
'interface'=70
'is'=71
'isnot'=72
'iterator'=73
'let'=74
'+'=76
'-'=77
'*'=78
'/'=79
'<'=80
'>'=81
'&'=82
'|'=83
'~'=84
'@'=85
'%'=86
'!'=87
'^'=88
'.'=89
':'=90
'{'=91
'}'=92
'('=93
')'=94
'['=95
']'=96
','=97
';'=98
